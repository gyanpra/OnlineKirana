@model OnlineKirana.Models.Product
@{
    ViewBag.Title = "Edit";
}
@{ Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


    <h2>Edit</h2>
    <script src="@Url.Content("~/Content/jquery/jquery.min.js")"></script>
    <script src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js")"></script>
    @using (Html.BeginForm("Edit", "ManageProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>Product Edit</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.ProductName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Category)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Category)
                @Html.ValidationMessageFor(model => model.Category)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Brand)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Brand)
                @Html.ValidationMessageFor(model => model.Brand)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Price)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.QualityOnHand)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.QualityOnHand)
                @Html.ValidationMessageFor(model => model.QualityOnHand)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ReOrderLevel)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ReOrderLevel)
                @Html.ValidationMessageFor(model => model.ReOrderLevel)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label" })
                <div class="editor-field">
                    <input type="file" name="file" id="file" style="width: 100%;" />
                    @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                </div>
            </div>



            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>